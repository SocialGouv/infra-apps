apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: copy-wildcard-secret
  annotations:
    policies.kyverno.io/title: Sync wildcard-crt
    policies.kyverno.io/category: SRE
    policies.kyverno.io/subject: Secret
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      Copy cert-manager's wildcard cert to all app namespaces
spec:
  useServerSideApply: true
  rules:
    - name: sync-wildcard-crt
      match:
        any:
          - resources:
              kinds:
                - Namespace
              operations:
                - CREATE
                - UPDATE
              selector:
                matchLabels:
                  cert: wildcard
      context:
        - name: tlscrt
          apiCall:
            urlPath: "/api/v1/namespaces/cert-manager/secrets/wildcard-crt"
            jmesPath: 'data."tls.crt"'
        - name: tlskey
          apiCall:
            urlPath: "/api/v1/namespaces/cert-manager/secrets/wildcard-crt"
            jmesPath: 'data."tls.key"'
      generate:
        apiVersion: v1
        kind: Secret
        name: wildcard-crt
        namespace: "{{ `{{request.object.metadata.name}}` }}"
        synchronize: true
        data:
          type: kubernetes.io/tls
          data:
            "tls.crt": "{{ `{{tlscrt}}` }}"
            "tls.key": "{{ `{{tlskey}}` }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: copy-wildcard-secret
rules:
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - create
  - update
  - delete
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: copy-wildcard-secret
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: copy-wildcard-secret
subjects:
- kind: ServiceAccount
  name: kyverno-background-controller
  namespace: kyverno
